{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport dtype from '@stdlib/ndarray-base-buffer-dtype';\nimport ndarray from '@stdlib/ndarray-base-ctor';\n\n\n// MAIN //\n\n/**\n* Converts an array to a one-dimensional ndarray.\n*\n* @param {Collection} buf - input array\n* @param {string} order - memory layout (either 'row-major' or 'column-major')\n* @returns {ndarray} ndarray\n*\n* @example\n* var arr = [ 1, 2, 3 ];\n*\n* var x = array2ndarray( arr, 'row-major' );\n* // returns <ndarray>\n*\n* var dt = x.dtype;\n* // returns 'generic'\n*\n* @example\n* import Float64Array from '@stdlib/array-float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0 ] );\n*\n* var x = array2ndarray( arr, 'row-major' );\n* // returns <ndarray>\n*\n* var dt = x.dtype;\n* // returns 'float64'\n*/\nfunction array2ndarray( buf, order ) {\n\tvar dt = dtype( buf ) || 'generic';\n\treturn new ndarray( dt, buf, [ buf.length ], [ 1 ], 0, order );\n}\n\n\n// EXPORTS //\n\nexport default array2ndarray;\n"],"names":["array2ndarray","buf","order","dt","dtype","ndarray","length"],"mappings":";;gMAuDA,SAASA,EAAeC,EAAKC,GAC5B,IAAIC,EAAKC,EAAOH,IAAS,UACzB,OAAO,IAAII,EAASF,EAAIF,EAAK,CAAEA,EAAIK,QAAU,CAAE,GAAK,EAAGJ,EACxD"}