{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar dtype = require( '@stdlib/ndarray-base-buffer-dtype' );\nvar ndarray = require( '@stdlib/ndarray-base-ctor' );\n\n\n// MAIN //\n\n/**\n* Converts an array to a one-dimensional ndarray.\n*\n* @param {Collection} buf - input array\n* @param {string} order - memory layout (either 'row-major' or 'column-major')\n* @returns {ndarray} ndarray\n*\n* @example\n* var arr = [ 1, 2, 3 ];\n*\n* var x = array2ndarray( arr, 'row-major' );\n* // returns <ndarray>\n*\n* var dt = x.dtype;\n* // returns 'generic'\n*\n* @example\n* var Float64Array = require( '@stdlib/array-float64' );\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0 ] );\n*\n* var x = array2ndarray( arr, 'row-major' );\n* // returns <ndarray>\n*\n* var dt = x.dtype;\n* // returns 'float64'\n*/\nfunction array2ndarray( buf, order ) {\n\tvar dt = dtype( buf ) || 'generic';\n\treturn new ndarray( dt, buf, [ buf.length ], [ 1 ], 0, order );\n}\n\n\n// EXPORTS //\n\nmodule.exports = array2ndarray;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert an array to a one-dimensional ndarray.\n*\n* @module @stdlib/ndarray-base-from-array\n*\n* @example\n* var array2ndarray = require( '@stdlib/ndarray-base-from-array' );\n*\n* var arr = [ 1, 2, 3 ];\n*\n* var x = array2ndarray( arr, 'row-major' );\n* // returns <ndarray>\n*\n* var dt = x.dtype;\n* // returns 'generic'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,mCAAoC,EACrDC,EAAU,QAAS,2BAA4B,EAgCnD,SAASC,EAAeC,EAAKC,EAAQ,CACpC,IAAIC,EAAKL,EAAOG,CAAI,GAAK,UACzB,OAAO,IAAIF,EAASI,EAAIF,EAAK,CAAEA,EAAI,MAAO,EAAG,CAAE,CAAE,EAAG,EAAGC,CAAM,CAC9D,CAKAL,EAAO,QAAUG,ICxBjB,IAAII,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "dtype", "ndarray", "array2ndarray", "buf", "order", "dt", "main"]
}
